/*

Given a non-empty list of words, return the k most frequent elements.

Your answer should be sorted by frequency from highest to lowest. If two words have the same frequency, then the word with 
the lower alphabetical order comes first.

Input: ["the", "day", "is", "sunny", "the", "the", "the", "sunny", "is", "is"], k = 4
Output: ["the", "is", "sunny", "day"]
Explanation: "the", "is", "sunny" and "day" are the four most frequent words, with the number of occurrence being 
4, 3, 2 and 1 respectively.

*/

class Solution {
    
    class pair{
        String string;
        int count;
        public pair(String s, int c){
            string = s;
            count = c;
        }
    }
    
    Comparator<pair> pairComparator = new Comparator<pair>(){
        public int compare(pair p1, pair p2){
            if (p1.count != p2.count){
                return p2.count - p1.count;
            }
            else{
                return p1.string.compareTo(p2.string);
            }
        }
    };
    
    public List<String> topKFrequent(String[] words, int k) {
        Map<String, Integer> map = new HashMap<>();
        for (String s : words){
            if (!map.containsKey(s)) map.put(s, 1);
            else map.put(s, map.get(s) + 1);
        }
        
        PriorityQueue<pair> pq = new PriorityQueue<>(k, pairComparator);
        for (String key : map.keySet()){
            pq.offer(new pair(key, map.get(key)));
        }
        
        List<String> res = new ArrayList<>();
        for (int i = 0; i < k; i++){
            res.add(pq.poll().string);
        }    
        return res;
    }
}
